openapi: 3.0.3

info:
  title: Homebridge HTTP Webhooks Server
  contact:
    name: Danila Loginov
    email: danila@loginov.rocks
    url: https://loginov.rocks
  version: 0.1.0
  license:
    name: MIT
    url: https://github.com/loginov-rocks/homebridge-http-webhooks-server/blob/main/LICENSE

externalDocs:
  description: GitHub
  url: https://github.com/loginov-rocks/homebridge-http-webhooks-server

servers:
  - url: http://localhost:3000
    description: Local Server

paths:
  /lights/{id}/brightness:
    get:
      summary: Set Brightness
      tags:
        - Lights
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Light ID
        - name: value
          in: query
          required: true
          schema:
            type: integer
            minimum: 0
            maximum: 100
          description: Brightness Value
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK
        400:
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: Bad Request

  /lights/{id}/off:
    get:
      summary: Turn Off
      tags:
        - Lights
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Light ID
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK

  /lights/{id}/on:
    get:
      summary: Turn On
      tags:
        - Lights
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Light ID
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK

  /lights/{id}/_internal:
    get:
      summary: Get Internal State
      tags:
        - Lights
        - Internal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Light ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/AbstractAcessoryInternalState"
                  - type: object
                    properties:
                      state:
                        type: boolean
                        nullable: true
                      brightness:
                        type: integer
                        nullable: true
                        minimum: 0
                        maximum: 100
                      events:
                        type: array
                        items:
                          oneOf:
                            - type: object
                              properties:
                                turnedOffAt:
                                  type: string
                                  format: date-time
                              required:
                                - turnedOffAt
                            - type: object
                              properties:
                                turnedOnAt:
                                  type: string
                                  format: date-time
                              required:
                                - turnedOnAt
                            - type: object
                              properties:
                                brightness:
                                  type: integer
                                  minimum: 0
                                  maximum: 100
                                changedAt:
                                  type: string
                                  format: date-time
                              required:
                                - brightness
                                - changedAt
                    required:
                      - state
                      - brightness
                      - events

  /outlets/{id}/off:
    get:
      summary: Turn Off
      tags:
        - Outlets
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Outlet ID
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK

  /outlets/{id}/on:
    get:
      summary: Turn On
      tags:
        - Outlets
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Outlet ID
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK

  /outlets/{id}/_internal:
    get:
      summary: Get Internal State
      tags:
        - Outlets
        - Internal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Outlet ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutletInternalState"
    patch:
      summary: Update Internal State
      tags:
        - Outlets
        - Internal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Outlet ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inUse:
                  type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutletInternalState"
        400:
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: Bad Request

  /pushbuttons/{id}/push:
    get:
      summary: Push
      tags:
        - Push Buttons
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Push Button ID
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK

  /pushbuttons/{id}/_internal:
    get:
      summary: Get Internal State
      tags:
        - Push Buttons
        - Internal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Push Button ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/AbstractAcessoryInternalState"
                  - type: object
                    properties:
                      events:
                        type: array
                        items:
                          type: object
                          properties:
                            pushedAt:
                              type: string
                              format: date-time
                          required:
                            - pushedAt
                    required:
                      - events

  /sensors/contact/{id}/_internal:
    get:
      summary: Get Internal State
      tags:
        - Sensors
        - Contact Sensors
        - Internal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Contact Sensor ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactSensorInternalState"
    patch:
      summary: Update Internal State
      tags:
        - Sensors
        - Contact Sensors
        - Internal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Contact Sensor ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inContact:
                  type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContactSensorInternalState"
        400:
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: Bad Request

  /sensors/humidity/{id}/_internal:
    get:
      summary: Get Internal State
      tags:
        - Sensors
        - Humidity Sensors
        - Internal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Humidity Sensor ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HumiditySensorInternalState"
    patch:
      summary: Update Internal State
      tags:
        - Sensors
        - Humidity Sensors
        - Internal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Humidity Sensor ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                humidity:
                  type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HumiditySensorInternalState"
        400:
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: Bad Request

  /sensors/temperature/{id}/_internal:
    get:
      summary: Get Internal State
      tags:
        - Sensors
        - Temperature Sensors
        - Internal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Temperature Sensor ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemperatureSensorInternalState"
    patch:
      summary: Update Internal State
      tags:
        - Sensors
        - Temperature Sensors
        - Internal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Temperature Sensor ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                temperature:
                  type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemperatureSensorInternalState"
        400:
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: Bad Request

  /switches/{id}/off:
    get:
      summary: Turn Off
      tags:
        - Switches
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Switch ID
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK

  /switches/{id}/on:
    get:
      summary: Turn On
      tags:
        - Switches
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Switch ID
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK

  /switches/{id}/_internal:
    get:
      summary: Get Internal State
      tags:
        - Switches
        - Internal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Switch ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/AbstractAcessoryInternalState"
                  - type: object
                    properties:
                      state:
                        type: boolean
                        nullable: true
                      events:
                        type: array
                        items:
                          oneOf:
                            - type: object
                              properties:
                                turnedOffAt:
                                  type: string
                                  format: date-time
                              required:
                                - turnedOffAt
                            - type: object
                              properties:
                                turnedOnAt:
                                  type: string
                                  format: date-time
                              required:
                                - turnedOnAt
                    required:
                      - state
                      - events

  /thermostats/{id}/target-state:
    get:
      summary: Set Target State
      tags:
        - Thermostats
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Thermostat ID
        - name: value
          in: query
          required: true
          schema:
            type: integer
            minimum: 0
            maximum: 3
          description: Target State Value
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK
        400:
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: Bad Request

  /thermostats/{id}/target-temperature:
    get:
      summary: Set Target Temperature
      tags:
        - Thermostats
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Thermostat ID
        - name: value
          in: query
          required: true
          schema:
            type: number
          description: Target Temperature Value
      responses:
        200:
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: OK

  /thermostats/{id}/_internal:
    get:
      summary: Get Internal State
      tags:
        - Thermostats
        - Internal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Thermostat ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThermostatInternalState"
    patch:
      summary: Update Internal State
      tags:
        - Thermostats
        - Internal
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Thermostat ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentState:
                  type: string
                  enum:
                    - off
                    - cold
                    - heat
                currentTemperature:
                  type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThermostatInternalState"
        400:
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: Bad Request

components:
  schemas:
    AbstractAcessoryInternalState:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name

    ContactSensorInternalState:
      allOf:
        - $ref: "#/components/schemas/AbstractAcessoryInternalState"
        - type: object
          properties:
            inContact:
              type: boolean
              nullable: true
            events:
              type: array
              items:
                type: object
                properties:
                  changedAt:
                    type: string
                    format: date-time
                  inContact:
                    type: boolean
                required:
                  - changedAt
                  - inContact
          required:
            - inContact
            - events

    HumiditySensorInternalState:
      allOf:
        - $ref: "#/components/schemas/AbstractAcessoryInternalState"
        - type: object
          properties:
            humidity:
              type: number
              nullable: true
            events:
              type: array
              items:
                type: object
                properties:
                  changedAt:
                    type: string
                    format: date-time
                  humidity:
                    type: number
                required:
                  - changedAt
                  - humidity
          required:
            - humidity
            - events

    OutletInternalState:
      allOf:
        - $ref: "#/components/schemas/AbstractAcessoryInternalState"
        - type: object
          properties:
            inUse:
              type: boolean
              nullable: true
            state:
              type: boolean
              nullable: true
            events:
              type: array
              items:
                oneOf:
                  - type: object
                    properties:
                      changedAt:
                        type: string
                        format: date-time
                      inUse:
                        type: boolean
                    required:
                      - changedAt
                      - inUse
                  - type: object
                    properties:
                      turnedOffAt:
                        type: string
                        format: date-time
                    required:
                      - turnedOffAt
                  - type: object
                    properties:
                      turnedOnAt:
                        type: string
                        format: date-time
                    required:
                      - turnedOnAt
          required:
            - inUse
            - state
            - events

    TemperatureSensorInternalState:
      allOf:
        - $ref: "#/components/schemas/AbstractAcessoryInternalState"
        - type: object
          properties:
            temperature:
              type: number
              nullable: true
            events:
              type: array
              items:
                type: object
                properties:
                  changedAt:
                    type: string
                    format: date-time
                  temperature:
                    type: number
                required:
                  - changedAt
                  - temperature
          required:
            - temperature
            - events

    ThermostatInternalState:
      allOf:
        - $ref: "#/components/schemas/AbstractAcessoryInternalState"
        - type: object
          properties:
            currentState:
              type: string
              nullable: true
              enum:
                - off
                - heat
                - cool
            currentTemperature:
              type: number
              nullable: true
            targetState:
              type: string
              nullable: true
              enum:
                - off
                - heat
                - cool
                - auto
            targetTemperature:
              type: number
              nullable: true
            events:
              type: array
              items:
                oneOf:
                  - type: object
                    properties:
                      changedAt:
                        type: string
                        format: date-time
                      currentState:
                        type: string
                        enum:
                          - off
                          - heat
                          - cool
                    required:
                      - changedAt
                      - currentState
                  - type: object
                    properties:
                      changedAt:
                        type: string
                        format: date-time
                      currentTemperature:
                        type: number
                    required:
                      - changedAt
                      - currentTemperature
                  - type: object
                    properties:
                      changedAt:
                        type: string
                        format: date-time
                      targetState:
                        type: string
                        enum:
                          - off
                          - heat
                          - cool
                          - auto
                    required:
                      - changedAt
                      - targetState
                  - type: object
                    properties:
                      changedAt:
                        type: string
                        format: date-time
                      targetTemperature:
                        type: number
                    required:
                      - changedAt
                      - targetTemperature
          required:
            - currentState
            - currentTemperature
            - targetState
            - targetTemperature
            - events
